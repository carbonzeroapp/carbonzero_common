services:
  postgres_db:
    container_name: db
    image: postgres:15.0
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./init_scripts:/docker-entrypoint-initdb.d
    env_file:
      - .env
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    restart: always
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 8s
      timeout: 4s
      retries: 5
    ports: 
      - 5432:5432
  data-management-be:
    container_name: data-management-be
    build:
      context: ../
      dockerfile: ./carbonzero_data_management/Dockerfile.prod
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - DB_SCHEMA=data_management_schema
    expose:
      - 8000
    restart: always
    image: data-management-be
    depends_on:
      postgres_db:
        condition: service_healthy
  user-management-be:
    container_name: user-management-be
    build:
      context: ../
      dockerfile: ./carbonzero_user_management/Dockerfile.prod
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - DB_SCHEMA=user_management_schema
    expose:
      - 8001
    restart: always
    image: user-management-be
    depends_on:
      postgres_db:
        condition: service_healthy
  ml-model-be:
    container_name: ml-model-be
    command: gunicorn --bind 0.0.0.0:8002 manage:app_ins
    build:
      context: ../
      dockerfile: ./carbonzero_ml_model/Dockerfile.prod
    expose:
      - 8002
    restart: always
    env_file:
      - ../carbonzero_ml_model/.env.prod
  nginx:
    image: nginx:latest
    ports:
      - 80:80
    volumes:
      - ../carbonzero_api_gateway/nginx/nginx-setup.conf:/etc/nginx/conf.d/default.conf:ro
      - ../carbonzero_data_management/static:/static
    depends_on:
      - postgres_db
      - data-management-be
      - user-management-be
volumes:
  pgdata: